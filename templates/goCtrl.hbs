package controller

import (
	"net/http"
	"{{project_name}}/models"
	"{{project_name}}/repository"

	"github.com/gin-gonic/gin"
)

func GetAll{{table_name}}(g *gin.Context) {
	var request models.{{table_name}}
	g.Bind(&request)

	result, err := repository.GetAll{{table_name}}(request)
	if err != nil {
		g.JSON(http.StatusBadRequest, gin.H{"success": false, "message": "No Record."})
	} else {
		g.JSON(http.StatusOK, gin.H{"success": true, "data": result})
	}
}

func Get{{table_name}}(g *gin.Context) {
	var request models.{{table_name}}
	g.Bind(&request)

	result, err := repository.Get{{table_name}}(request)
	if err != nil {
		g.JSON(http.StatusBadRequest, gin.H{"success": false, "message": "No Record."})
	} else {
		g.JSON(http.StatusOK, gin.H{"success": true, "data": result})
	}
}

func Create{{table_name}}(g *gin.Context) {
	var request models.{{table_name}}
	g.Bind(&request)

	message, err := repository.Create{{table_name}}(request)
	if err != nil {
		g.JSON(http.StatusBadRequest, gin.H{"success": false, "message": "No Record."})
	} else {
		g.JSON(http.StatusOK, gin.H{"success": true, "message": message})
	}
}

func Update{{table_name}}(g *gin.Context) {
	var request models.{{table_name}}
	g.Bind(&request)

	message, err := repository.Update{{table_name}}(request)

	if err != nil {
		g.JSON(http.StatusBadRequest, gin.H{"success": false, "message": "No Record."})
	} else {
		g.JSON(http.StatusOK, gin.H{"success": true, "message": message})
	}
}

func Delete{{table_name}}(g *gin.Context) {
	var request models.{{table_name}}
	g.Bind(&request)

	message, err := repository.Delete{{table_name}}(request)
	if err != nil {
		g.JSON(http.StatusBadRequest, gin.H{"success": false, "message": "No Record."})
	} else {
		g.JSON(http.StatusOK, gin.H{"success": true, "message": message})
	}
}
